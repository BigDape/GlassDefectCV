<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="19.11.0.0">
<procedure name="Detect_JieShi">
<interface>
<io>
<par name="Image1" base_type="iconic" dimension="0"/>
<par name="Image2" base_type="iconic" dimension="0"/>
<par name="Image3" base_type="iconic" dimension="0"/>
<par name="Image4" base_type="iconic" dimension="0"/>
<par name="DetectRoi" base_type="iconic" dimension="0"/>
<par name="NoDetectRoi" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="ErrRoi" base_type="iconic" dimension="0"/>
<par name="AlarmRoi" base_type="iconic" dimension="0"/>
<par name="ErrImage" base_type="iconic" dimension="0"/>
<par name="AlarmImage" base_type="iconic" dimension="0"/>
<par name="OriginalErrRoi" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="DetectDict" base_type="ctrl" dimension="0"/>
<par name="VisionProcessStep" base_type="ctrl" dimension="0"/>
<par name="ImageIndex" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="ErrName" base_type="ctrl" dimension="0"/>
<par name="AlarmName" base_type="ctrl" dimension="0"/>
<par name="ErrW" base_type="ctrl" dimension="0"/>
<par name="ErrH" base_type="ctrl" dimension="0"/>
<par name="ErrArea" base_type="ctrl" dimension="0"/>
<par name="ErrX" base_type="ctrl" dimension="0"/>
<par name="ErrY" base_type="ctrl" dimension="0"/>
<par name="AlarmW" base_type="ctrl" dimension="0"/>
<par name="AlarmH" base_type="ctrl" dimension="0"/>
<par name="AlarmArea" base_type="ctrl" dimension="0"/>
<par name="AlarmX" base_type="ctrl" dimension="0"/>
<par name="AlarmY" base_type="ctrl" dimension="0"/>
<par name="MapIndex" base_type="ctrl" dimension="0"/>
<par name="ParIndex" base_type="ctrl" dimension="0"/>
<par name="ErrImageIndex" base_type="ctrl" dimension="0"/>
<par name="OK" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>OK:=[]</l>
<l>try</l>
<c>    </c>
<l>    gen_empty_obj (ErrRoi) </l>
<l>    gen_empty_obj (AlarmRoi)</l>
<l>    gen_empty_obj (ErrImage) </l>
<l>    gen_empty_obj (AlarmImage)</l>
<l>    gen_empty_obj (OriginalErrRoi)</l>
<l>    gen_empty_obj (jieshi1)</l>
<l>    gen_empty_obj (jieshi2)</l>
<l>    ErrName:=[]</l>
<l>    AlarmName:=[]</l>
<l>    ErrW:=[]</l>
<l>    ErrH:=[]</l>
<l>    ErrArea:=[]</l>
<l>    ErrX:=[]</l>
<l>    ErrY:=[]</l>
<l>    AlarmW:=[]</l>
<l>    AlarmH:=[]</l>
<l>    AlarmArea:=[]</l>
<l>    AlarmX:=[]</l>
<l>    AlarmY:=[]</l>
<l>    MapIndex:=[]</l>
<l>    ParIndex:=[]</l>
<l>    ErrImageIndex:=[]</l>
<c>    </c>
<c>    </c>
<l>    get_dict_tuple (DetectDict,'结石' , JieShiDict)</l>
<l>    get_dict_tuple (JieShiDict, 'JieShi_threshold_Min1', JieShi_threshold_Min1) </l>
<l>    get_dict_tuple (JieShiDict, 'JieShi_threshold_Max1', JieShi_threshold_Max1) </l>
<l>    get_dict_tuple (JieShiDict, 'JieShi_threshold_Min2', JieShi_threshold_Min2) </l>
<l>    get_dict_tuple (JieShiDict, 'JieShi_threshold_Max2', JieShi_threshold_Max2) </l>
<l>    get_dict_tuple (JieShiDict, 'JieShi_threshold_Min3', JieShi_threshold_Min3) </l>
<l>    get_dict_tuple (JieShiDict, 'JieShi_threshold_Max3', JieShi_threshold_Max3) </l>
<l>    get_dict_tuple (JieShiDict, 'JieShi_L', JieShi_L)</l>
<l>    get_dict_tuple (JieShiDict, 'JieShi_W', JieShi_W)</l>
<l>    get_dict_tuple (JieShiDict, 'JieShi2_L', JieShi2_L)</l>
<l>    get_dict_tuple (JieShiDict, 'JieShi2_W', JieShi2_W)</l>
<c>    </c>
<l>    get_dict_tuple (DetectDict,'使能' , EnabledDict)</l>
<l>    get_dict_tuple (EnabledDict, 'JieShi2_Enabled', JieShi_Enabled2)  </l>
<l>    get_dict_tuple (EnabledDict, 'JieShi1_Enabled', JieShi_Enabled1)  </l>
<c>    </c>
<c>    </c>
<c>    </c>
<c>    </c>
<l>    get_dict_tuple (DetectDict,'系统参数', EnabledDict)</l>
<l>    get_dict_tuple (EnabledDict,'siyinclass' , siyinclass)  </l>
<l>    if (siyinclass!=0)</l>
<l>        shape_trans (DetectRoi, RegionTrans, 'rectangle1')</l>
<c>        </c>
<l>        if (VisionProcessStep==9)</l>
<l>            move_region (RegionTrans, RegionTrans, -300, 1) </l>
<l>        endif</l>
<c>        </c>
<l>        if (VisionProcessStep==0)</l>
<l>            move_region (RegionTrans, RegionTrans, 20, 1) </l>
<l>        endif  </l>
<l>        erosion_rectangle1 (DetectRoi, DetectRoi, 11, 11)</l>
<l>        intersection (DetectRoi, RegionTrans, DetectRoi)</l>
<l>    else  </l>
<l>        if (VisionProcessStep==0)</l>
<l>            move_region (DetectRoi, DetectRoi, 400, 1)</l>
<l>        endif</l>
<l>        if (VisionProcessStep&gt;=9)</l>
<l>            move_region (DetectRoi, DetectRoi, -20, 1)</l>
<l>        endif   </l>
<l>    endif</l>
<l>    erosion_rectangle1 (DetectRoi, RegionErosion, 10, 10)</l>
<l>    difference (DetectRoi, NoDetectRoi, RegionErosion)</l>
<c>    </c>
<l>    reduce_domain (Image1, RegionErosion, ImageReduced)</l>
<c>    </c>
<c>    </c>
<l>    if (JieShi_Enabled2)  </l>
<l>        threshold (ImageReduced, Regions, 255, 255)</l>
<l>        closing_circle (Regions, RegionClosing, 3.5)</l>
<l>        connection (RegionClosing, ConnectedRegions1)</l>
<l>        select_shape (ConnectedRegions1, SelectedRegions1, 'area', 'and', 5, 100)</l>
<l>        select_shape (SelectedRegions1, SelectedRegions1, 'circularity', 'and', 0.65, 2.0)</l>
<l>        gen_empty_region (Forbidden)</l>
<l>        expand_gray (SelectedRegions1, ImageReduced, Forbidden, RegionExpand, 10, 'image', 40) </l>
<l>        dilation_rectangle1 (RegionExpand, RegionDilation2, 11, 11)</l>
<c>        </c>
<l>        count_obj (RegionDilation2, Number2)</l>
<l>        for Index := 1 to Number2 by 1</l>
<l>            select_obj (RegionDilation2, ObjectSelected2, Index)</l>
<l>            min_max_gray (ObjectSelected2, Image2, 0, Min, Max, Range)</l>
<l>            if (Min&lt;18)</l>
<l>                reduce_domain (Image2, ObjectSelected2, ImageReduced1)</l>
<l>                threshold (ImageReduced1, Regions, 0, 30)</l>
<l>                 closing_circle (Regions, RegionClosing, 3.5)</l>
<l>                select_shape (RegionClosing, SelectedRegions1, 'area', 'and', 5, 200)</l>
<l>                connection (SelectedRegions1, ConnectedRegions2)</l>
<l>                count_obj (ConnectedRegions2, Number1)</l>
<l>                if (Number1==1)</l>
<l>                    tuple_gen_const (1, 1, Newtuple)</l>
<l>                    GatherInfo_OkNG (SelectedRegions1, Image1, Image2, Image3, RoiImage, TransRoi, SelectRegion, DetectDict, JieShiDict, '结石2', VisionProcessStep, ImageIndex, JieShi2_W, JieShi2_L, Newtuple, Name, W, H, X, Y, Area, mapIndex, parIndex, SelectDisPlayImageIndex, OK1)</l>
<l>                    if (OK1!=[])</l>
<l>                        dilation_circle (SelectRegion, OriginalErrRoi, 10)</l>
<l>                        concat_obj (ErrImage, RoiImage, ErrImage)</l>
<l>                        concat_obj (ErrRoi, TransRoi, ErrRoi)</l>
<l>                        ErrName:=[ErrName,Name]</l>
<l>                        ErrW:=[ErrW,W]</l>
<l>                        ErrH:=[ErrH,H]</l>
<l>                        ErrArea:=[ErrArea,Area]</l>
<l>                        ErrX:=[ErrX,X]</l>
<l>                        ErrY:=[ErrY,Y]</l>
<l>                        MapIndex:=[MapIndex,mapIndex]</l>
<l>                        ParIndex:=[ParIndex,parIndex]</l>
<l>                        ErrImageIndex := [ErrImageIndex,SelectDisPlayImageIndex]</l>
<l>                        OK:=[OK,OK1]</l>
<l>                    endif</l>
<l>                endif</l>
<l>            endif</l>
<l>        endfor</l>
<l>    endif</l>
<c>    </c>
<c>    </c>
<l>    if (JieShi_Enabled1)  </l>
<l>        threshold (ImageReduced, Regions1, JieShi_threshold_Min1, JieShi_threshold_Max1)</l>
<l>        closing_circle (Regions1, RegionClosing1, 1.5)</l>
<l>        connection (RegionClosing1, ConnectedRegions)</l>
<l>        select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 5, 9999)</l>
<l>        union1 (SelectedRegions, RegionUnion)</l>
<l>        dilation_circle (RegionUnion, RegionDilation, 12)</l>
<c>        </c>
<c>        </c>
<l>        reduce_domain (Image2, RegionDilation, ImageReduced)</l>
<l>        threshold (ImageReduced, Regions2, JieShi_threshold_Min2, JieShi_threshold_Max2)</l>
<l>        closing_circle (Regions2, RegionClosing2, 3.5)</l>
<l>        connection (RegionClosing2, ConnectedRegions4)</l>
<l>        select_shape (ConnectedRegions4, r2, 'area', 'and', 5, 300)</l>
<c>        </c>
<l>        count_obj (r2, Number3)</l>
<c>        </c>
<l>        if (Number3&gt;0)</l>
<l>            read_class_mlp ('D:/HalconFunction/ClassHandleJS.gsc', MLPHandle)</l>
<l>            area_center (r2, Area1, Row, Column)</l>
<l>            tuple_gen_const (|Row|, 60, Len1)</l>
<l>            tuple_gen_const (|Row|, 40, Len2)</l>
<l>            tuple_gen_const (|Row|, 0, phi)</l>
<l>            gen_rectangle2 (Rectangle, Row, Column, phi,Len2, Len1 )</l>
<l>            for Index1 := 1 to Number3 by 1</l>
<l>                select_obj (Rectangle, ObjectSelected1, Index1)</l>
<l>                intersection (ObjectSelected1, DetectRoi, RegionIntersection)           </l>
<c>                </c>
<l>                calculate_features_JieShi (RegionIntersection, Image3, Features)</l>
<l>                classify_class_mlp (MLPHandle, Features, 1, Class, Confidence)</l>
<l>                if (Class==1)   </l>
<l>*                     reduce_domain (Image3, RegionIntersection, ImageReduced)</l>
<l>*                     crop_domain (ImageReduced, ImagePart)</l>
<l>*                     write_image (ImagePart, 'bmp', 0, 'D:/ler/js/0/j83.bmp')</l>
<c>                    </c>
<l>                    select_obj (r2, ObjectSelected, Index1)</l>
<l>                    dilation_rectangle1 (ObjectSelected, RegionDilation1, 11, 11)</l>
<l>                    intersection (RegionDilation1, RegionUnion, RegionIntersection1)</l>
<l>                    union2 (RegionIntersection1, ObjectSelected, RegionUnion1)    </l>
<l>                    concat_obj (jieshi1, RegionUnion1, jieshi1) </l>
<l>                endif</l>
<l>            endfor</l>
<l>            clear_class_mlp (MLPHandle)  </l>
<l>        endif</l>
<c>        </c>
<l>        count_obj ( jieshi1,Number)</l>
<l>        if (Number&gt;0)</l>
<l>            tuple_gen_const (Number, 3, Newtuple)</l>
<l>            GatherInfo_OkNG (jieshi1, Image1, Image2, Image3, RoiImage, TransRoi, SelectRegion, DetectDict, JieShiDict, '结石1', VisionProcessStep, ImageIndex, JieShi_W, JieShi_L, Newtuple, Name, W, H, X, Y, Area, mapIndex, parIndex, SelectDisPlayImageIndex, OK1)</l>
<l>            if (OK1!=[])</l>
<l>                dilation_circle (SelectRegion, OriginalErrRoi, 10)</l>
<l>                concat_obj (ErrImage, RoiImage, ErrImage)</l>
<l>                concat_obj (ErrRoi, TransRoi, ErrRoi)</l>
<l>                ErrName:=[ErrName,Name]</l>
<l>                ErrW:=[ErrW,W]</l>
<l>                ErrH:=[ErrH,H]</l>
<l>                ErrArea:=[ErrArea,Area]</l>
<l>                ErrX:=[ErrX,X]</l>
<l>                ErrY:=[ErrY,Y]</l>
<l>                MapIndex:=[MapIndex,mapIndex]</l>
<l>                ParIndex:=[ParIndex,parIndex]</l>
<l>                ErrImageIndex := [ErrImageIndex,SelectDisPlayImageIndex]</l>
<l>                OK:=[OK,OK1]</l>
<l>            endif</l>
<l>        endif  </l>
<l>    endif</l>
<c>    </c>
<c>    </c>
<c>    </c>
<c>    **************************************************************************************</c>
<l>catch (Exception )</l>
<l>endtry</l>
<c></c>
<l>return ()</l>
</body>
<docu id="Detect_JieShi">
<parameters>
<parameter id="AlarmArea"/>
<parameter id="AlarmH"/>
<parameter id="AlarmImage"/>
<parameter id="AlarmName"/>
<parameter id="AlarmRoi"/>
<parameter id="AlarmW"/>
<parameter id="AlarmX"/>
<parameter id="AlarmY"/>
<parameter id="DetectDict"/>
<parameter id="DetectRoi"/>
<parameter id="ErrArea"/>
<parameter id="ErrH"/>
<parameter id="ErrImage"/>
<parameter id="ErrImageIndex"/>
<parameter id="ErrName"/>
<parameter id="ErrRoi"/>
<parameter id="ErrW"/>
<parameter id="ErrX"/>
<parameter id="ErrY"/>
<parameter id="Image1"/>
<parameter id="Image2"/>
<parameter id="Image3"/>
<parameter id="Image4"/>
<parameter id="ImageIndex"/>
<parameter id="MapIndex"/>
<parameter id="NoDetectRoi"/>
<parameter id="OK"/>
<parameter id="OriginalErrRoi"/>
<parameter id="ParIndex"/>
<parameter id="VisionProcessStep"/>
</parameters>
</docu>
</procedure>
</hdevelop>
